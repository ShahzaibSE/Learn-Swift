1
00:00:00,567 --> 00:00:02,367
Muito bem. Para criar
o Pitch Perfect,

2
00:00:02,400 --> 00:00:06,234
temos que aprender a criar
um novo projeto no Xcode.

3
00:00:06,901 --> 00:00:10,667
Se essa tela ainda não apareceu,
comece abrindo o Xcode.

4
00:00:10,934 --> 00:00:14,467
E então clique em "File",
"New" e "Project".

5
00:00:17,300 --> 00:00:20,100
Isso vai abrir um novo
wizard de projeto.

6
00:00:20,133 --> 00:00:23,367
Veja se você selecionou
a seção iOS.

7
00:00:23,400 --> 00:00:27,467
Depois selecione a opção
Single View Application, e "Next".

8
00:00:28,067 --> 00:00:30,567
Em seguida, dê um nome
ao aplicativo iOS.

9
00:00:33,400 --> 00:00:35,467
"Pitch Perfect" parece
uma boa escolha.

10
00:00:35,501 --> 00:00:38,634
No nome da Organização,
escreva o que quiser.

11
00:00:38,667 --> 00:00:40,434
Eu vou pôr Udacity.

12
00:00:41,133 --> 00:00:42,767
O mesmo vale
para os identificadores,

13
00:00:42,801 --> 00:00:44,734
que vou abordar mais tarde.

14
00:00:45,501 --> 00:00:47,501
Em "linguagem,"
coloque Swift.

15
00:00:47,534 --> 00:00:50,300
Os dispositivos estão
configurados como "Universal".

16
00:00:50,334 --> 00:00:53,634
Você pode desmarcar todas
as opções nesse momento.

17
00:00:54,167 --> 00:00:56,667
Tudo certo.
Clicamos em "Next".

18
00:00:58,067 --> 00:01:00,868
Selecione o local onde
você quer salvar o projeto.

19
00:01:00,901 --> 00:01:04,167
Vou colocá-lo no meu desktop
e clicar em "Create".

20
00:01:06,901 --> 00:01:10,701
O Xcode agora vai criar um novo
aplicativo iOS, o Pitch Perfect,

21
00:01:10,734 --> 00:01:14,167
e vai gerar automaticamente
arquivos e configurações.

22
00:01:14,200 --> 00:01:17,868
Aqui está o projeto que o Xcode
criou automaticamente para mim.

23
00:01:17,901 --> 00:01:20,334
No alto, à esquerda,
há uma classe AppDelegate,

24
00:01:20,367 --> 00:01:22,033
que capta ocorrências
de eventos,

25
00:01:22,066 --> 00:01:23,667
como a inicialização
do aplicativo,

26
00:01:23,701 --> 00:01:25,033
alertas de memória,

27
00:01:25,067 --> 00:01:28,067
ou quando o seu aplicativo
vai para o segundo plano.

28
00:01:28,100 --> 00:01:30,701
Há também uma classe
ViewController padrão.

29
00:01:30,734 --> 00:01:33,300
Depois vamos adicionar
mais coisas.

30
00:01:33,334 --> 00:01:35,801
Por enquanto vamos adicionar
uma linha no AppDelegate

31
00:01:35,834 --> 00:01:38,267
para uma função acionada
ao iniciar o aplicativo,

32
00:01:38,300 --> 00:01:42,167
chamada
didFinishLaunchingWithOptions.

33
00:01:42,200 --> 00:01:46,567
Essa linha de código vai exibir
"hello, world" na barra.

34
00:01:46,601 --> 00:01:49,434
Aqui na função
didFinishLaunchingWithOptions,

35
00:01:49,467 --> 00:01:53,267
em verde, vemos comentários
pré-configurados do Xcode.

36
00:01:53,300 --> 00:01:56,434
Vamos pôr nossa instrução
logo após o comentário.

37
00:01:56,467 --> 00:01:59,067
Vou digitar:
print ("hello, world").

38
00:01:59,100 --> 00:02:01,868
Certo. Vamos
testar o nosso código.

39
00:02:01,901 --> 00:02:05,334
Para isso, vamos clicar no botão
"Run", no alto, à esquerda,

40
00:02:05,367 --> 00:02:07,234
que vai acionar
o simulador iOS

41
00:02:07,267 --> 00:02:09,701
e iniciar a execução
do aplicativo.

42
00:02:13,067 --> 00:02:14,734
Quando o simulador
é acionado,

43
00:02:14,767 --> 00:02:18,634
vemos o nosso novo aplicativo
em um plano de fundo branco.

44
00:02:19,000 --> 00:02:22,267
Na barra inferior, vemos
as palavras "hello, world".

45
00:02:22,300 --> 00:02:25,968
Beleza. Em poucos minutos,
o aplicativo foi criado.

46
00:02:26,000 --> 00:02:28,834
Provavelmente ele não vai
ganhar o Prêmio Apple,

47
00:02:28,868 --> 00:02:30,634
mas é um começo.

48
00:02:31,033 --> 00:02:33,467
Vamos aprimorá-lo
durante o curso,

49
00:02:33,501 --> 00:02:36,534
mas antes vamos olhar
mais de perto o Xcode.

